(*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*)


let fibIter (lst: System.Numerics.BigInteger list) =
    match lst with
    | x::y::rest -> (x+y)::lst
    | _ -> lst

let applyN f n v =
   let g = [1..n]
        |> List.map (fun _ -> f)
        |> List.reduce (>>)
   g v

let result = applyN fibIter 100 [1I;0I] 
                |> List.filter(fun x -> x < 4_000_000I) 
                |> List.filter(fun x -> x % 2I = 0I) 
                |> List.reduce((+))

printfn "Answer: %A" result 
